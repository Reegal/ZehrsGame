/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zehrsgame;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author Reegal
 */
public class Menu extends javax.swing.JFrame {

    ArrayList<NoInputScene> noInputScenes = new ArrayList();
    ArrayList<Phase1Scene> phase1Scenes = new ArrayList();
    ArrayList<Phase2Scene> phase2Scenes = new ArrayList();

    int phase = 0;

    int sceneIndex = 0;

    int questionsAsked = 0;

    int irritation = 0;

    int type = 0;

    int numcontinue = 0;

    boolean lastp2 = false;

    boolean right = false;

    public Menu() {
        initComponents();

        try {

            File f = new File("src\\zehrsgame\\NoInputScenes.txt");

            Scanner s = new Scanner(f);

            String n;

            String[] d;

            while (s.hasNextLine()) {

                n = s.nextLine();

                d = s.nextLine().split("#");

                noInputScenes.add(new NoInputScene(n, d));

            }

            f = new File("src\\zehrsgame\\Phase1Dialog.txt");

            s = new Scanner(f);

            ArrayList<String> descriptions = new ArrayList();

            ArrayList<String[]> dialogues = new ArrayList();

            ArrayList<Integer> irritations = new ArrayList();

            while (s.hasNextLine()) {

                n = s.nextLine();
                for (int i = 0; i < 9; i++) {
                    descriptions.add(s.nextLine());

                    dialogues.add(s.nextLine().split("#"));

                    irritations.add(Integer.parseInt(s.nextLine()));
                }

                phase1Scenes.add(new Phase1Scene(n, descriptions, dialogues, irritations));

                descriptions = new ArrayList();

                dialogues = new ArrayList();

                irritations = new ArrayList();
            }

            f = new File("src\\zehrsgame\\Phase2Dialog.txt");

            s = new Scanner(f);

            descriptions = new ArrayList();

            dialogues = new ArrayList();

            while (s.hasNextLine()) {

                n = s.nextLine();
                for (int i = 0; i < 3; i++) {
                    descriptions.add(s.nextLine());

                    dialogues.add(s.nextLine().split("#"));

                }


                phase2Scenes.add(new Phase2Scene(n, descriptions, dialogues));

                descriptions = new ArrayList();

                dialogues = new ArrayList();
            }

        } catch (FileNotFoundException e) {
        }

        btnCall.setVisible(false);
        noInputScenes.get(0).playScene(display1, this);

    }

    public void setDialogue(String s) {
        txtDialogue.setText(s);

    }

    public void endScene() {
        phase++;
        btnQuestion1.setEnabled(false);
        btnQuestion2.setEnabled(false);
        btnQuestion3.setEnabled(false);
        btnCasual.setEnabled(true);
        btnCall.setEnabled(true);
        btnUnrelated.setEnabled(true);
        btnInvasive.setEnabled(true);
        btnCasual.setText("Accuse Gordon");
        btnCall.setText("Accuse Jason");
        btnUnrelated.setText("Accuse Reegal");
        btnInvasive.setText("Accuse Colin");
        noInputScenes.get(2).playScene(display1, this);
        btnContinue.setVisible(true);
        btnCall.setVisible(true);
        btnContinue.setEnabled(false);
    }

    public void endMid() {
        phase++;
        btnCasual.setEnabled(false);
        btnCall.setEnabled(false);
        btnUnrelated.setEnabled(false);
        btnInvasive.setEnabled(false);
        btnContinue.setEnabled(true);
        noInputScenes.get(3).playScene(display1, this);
    }

    public void endFinal() {
        if (right) {
            phase++;
            noInputScenes.get(4).playScene(display1, this);
            btnContinue.setEnabled(true);
        } else {
            noInputScenes.get(6).playScene(display1, this);
            btnContinue.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngpQuestion = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDialogue = new javax.swing.JTextArea();
        btnUnrelated = new javax.swing.JButton();
        btnCasual = new javax.swing.JButton();
        btnInvasive = new javax.swing.JButton();
        btnCall = new javax.swing.JButton();
        display1 = new zehrsgame.Display();
        lblStatus = new javax.swing.JLabel();
        btnQuestion3 = new javax.swing.JButton();
        btnQuestion1 = new javax.swing.JButton();
        btnQuestion2 = new javax.swing.JButton();
        btnContinue = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtDialogue.setEditable(false);
        txtDialogue.setColumns(20);
        txtDialogue.setLineWrap(true);
        txtDialogue.setRows(5);
        txtDialogue.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtDialogue);

        btnUnrelated.setText("Ask Unrelated Question");
        btnUnrelated.setEnabled(false);
        btnUnrelated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnrelatedActionPerformed(evt);
            }
        });

        btnCasual.setText("Ask Casual Question");
        btnCasual.setEnabled(false);
        btnCasual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCasualActionPerformed(evt);
            }
        });

        btnInvasive.setText("Ask Invasive Question");
        btnInvasive.setEnabled(false);
        btnInvasive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvasiveActionPerformed(evt);
            }
        });

        btnCall.setText("Call Mr. Zehrs");
        btnCall.setEnabled(false);
        btnCall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCallActionPerformed(evt);
            }
        });

        display1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout display1Layout = new javax.swing.GroupLayout(display1);
        display1.setLayout(display1Layout);
        display1Layout.setHorizontalGroup(
            display1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );
        display1Layout.setVerticalGroup(
            display1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );

        btnQuestion3.setText("Question 3");
        btnQuestion3.setEnabled(false);
        btnQuestion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuestion3ActionPerformed(evt);
            }
        });

        btnQuestion1.setText("Question 1");
        btnQuestion1.setEnabled(false);
        btnQuestion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuestion1ActionPerformed(evt);
            }
        });

        btnQuestion2.setText("Question 2");
        btnQuestion2.setEnabled(false);
        btnQuestion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuestion2ActionPerformed(evt);
            }
        });

        btnContinue.setText("Continue");
        btnContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(display1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCasual, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(btnInvasive, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(btnUnrelated, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCall, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnQuestion1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(btnQuestion2, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(btnQuestion3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(btnContinue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(display1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnUnrelated)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCasual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInvasive)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCall)
                        .addGap(21, 21, 21)
                        .addComponent(btnQuestion1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQuestion2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQuestion3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnContinue)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUnrelatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnrelatedActionPerformed
        if (phase == 3) {
            endMid();
        } else {
            btnQuestion1.setText(phase1Scenes.get(sceneIndex).getDescription().get(6));
            btnQuestion2.setText(phase1Scenes.get(sceneIndex).getDescription().get(7));
            btnQuestion3.setText(phase1Scenes.get(sceneIndex).getDescription().get(8));

            type = 2;
        }
    }//GEN-LAST:event_btnUnrelatedActionPerformed

    private void btnCasualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCasualActionPerformed
        if (phase == 3) {
            endMid();
        } else {
            btnQuestion1.setText(phase1Scenes.get(sceneIndex).getDescription().get(3));
            btnQuestion2.setText(phase1Scenes.get(sceneIndex).getDescription().get(4));
            btnQuestion3.setText(phase1Scenes.get(sceneIndex).getDescription().get(5));

            for (Phase2Scene i : phase2Scenes) {
            }

            type = 1;
        }
    }//GEN-LAST:event_btnCasualActionPerformed

    private void btnInvasiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvasiveActionPerformed
        if (phase == 3) {
            endMid();
            right = true;
        } else {
            btnQuestion1.setText(phase1Scenes.get(sceneIndex).getDescription().get(0));
            btnQuestion2.setText(phase1Scenes.get(sceneIndex).getDescription().get(1));
            btnQuestion3.setText(phase1Scenes.get(sceneIndex).getDescription().get(2));

            type = 0;
        }
    }//GEN-LAST:event_btnInvasiveActionPerformed

    private void btnCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCallActionPerformed
        if (phase == 3) {
            endMid();
        } else {
            btnQuestion1.setText("<html>test test test test test test test test");
        }
    }//GEN-LAST:event_btnCallActionPerformed

    private void btnQuestion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuestion3ActionPerformed
        if (phase == 1) {
            int n = 0;
            if (type == 0) {
                n = 2;
            } else if (type == 1) {
                n = 5;
            } else {
                n = 8;
            }

            irritation += phase1Scenes.get(sceneIndex).playScene(display1, this, n);

            checkSceneChange();
        } else {
            phase2Scenes.get(sceneIndex).playScene(display1, this, 2);
            if (sceneIndex == phase1Scenes.size() - 1) {
                lastp2 = true;
            }
            btnContinue.setVisible(true);
        }


    }//GEN-LAST:event_btnQuestion3ActionPerformed

    private void btnQuestion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuestion1ActionPerformed
        if (phase == 1) {
            int n = 0;
            if (type == 0) {
                n = 0;
            } else if (type == 1) {
                n = 3;
            } else {
                n = 6;
            }
            irritation += phase1Scenes.get(sceneIndex).playScene(display1, this, n);

            checkSceneChange();
        } else {
            phase2Scenes.get(sceneIndex).playScene(display1, this, 0);
            if (sceneIndex == phase1Scenes.size() - 1) {
                lastp2 = true;
            }
            btnContinue.setVisible(true);
        }

    }//GEN-LAST:event_btnQuestion1ActionPerformed

    private void btnQuestion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuestion2ActionPerformed
        if (phase == 1) {
            int n = 0;
            if (type == 0) {
                n = 1;
            } else if (type == 1) {
                n = 4;
            } else {
                n = 7;
            }
            irritation += phase1Scenes.get(sceneIndex).playScene(display1, this, n);

            checkSceneChange();
        } else {
            phase2Scenes.get(sceneIndex).playScene(display1, this, 1);
            if (sceneIndex == phase1Scenes.size() - 1) {
                lastp2 = true;
            }
            btnContinue.setVisible(true);
        }

    }//GEN-LAST:event_btnQuestion2ActionPerformed

    private void btnContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinueActionPerformed
        if (phase == 2) {
            if (!lastp2) {
                sceneIndex++;

                display1.setCharacter(phase2Scenes.get(sceneIndex).getCharacter());

                display1.repaint();

                updateQuestions();

                btnContinue.setVisible(false);

                setDialogue("");
            } else {
                endScene();
            }

        } else if (phase == 4) {
            endFinal();
        } else if (phase == 5) {
            btnContinue.setEnabled(false);
            noInputScenes.get(5).playScene(display1, this);
        } else {
            if (numcontinue == 0) {
                noInputScenes.get(1).playScene(display1, this);

                numcontinue++;

                type = 0;
            } else {
                phase += 1;

                btnQuestion1.setEnabled(true);
                btnQuestion2.setEnabled(true);
                btnQuestion3.setEnabled(true);
                btnCasual.setEnabled(true);
                btnUnrelated.setEnabled(true);
                btnInvasive.setEnabled(true);

                btnContinue.setVisible(false);

                display1.setCharacter(phase1Scenes.get(sceneIndex).getCharacter());

                display1.repaint();

                updateQuestions();

                setDialogue("");
            }
        }


    }//GEN-LAST:event_btnContinueActionPerformed

    private void checkSceneChange() {
        if (irritation > 10) {
            setDialogue(txtDialogue.getText() + "\n" + phase1Scenes.get(sceneIndex).getCharacter() + " walked away out off irritation");
            if (sceneIndex == phase1Scenes.size() - 1) {

                transitionPhase2();
            } else {
                sceneIndex++;

                questionsAsked = 0;

                irritation = 0;

                display1.setCharacter(phase1Scenes.get(sceneIndex).getCharacter());

                display1.repaint();

                updateQuestions();
            }
            if (phase == 1) {
                setDialogue(txtDialogue.getText() + "\n" + "You went to go talk to " + phase1Scenes.get(sceneIndex).getCharacter() + " instead.");
            } else {
                setDialogue(txtDialogue.getText() + "\n" + "You went to go talk to " + phase2Scenes.get(sceneIndex).getCharacter() + " instead.");
            }

        } else if (irritation > 5) {
            setDialogue(txtDialogue.getText() + "\n" + phase1Scenes.get(sceneIndex).getCharacter() + " seems very irritated.");

            checkMaxQuestions();

        } else if (irritation > 0) {
            setDialogue(txtDialogue.getText() + "\n" + phase1Scenes.get(sceneIndex).getCharacter() + " seems mildly irritated.");
            checkMaxQuestions();
        } else if (irritation > -5) {
            setDialogue(txtDialogue.getText() + "\n" + phase1Scenes.get(sceneIndex).getCharacter() + " seems comfortable.");
            checkMaxQuestions();
        } else {
            setDialogue(txtDialogue.getText() + "\n" + phase1Scenes.get(sceneIndex).getCharacter() + " seems very comfortable.");
            checkMaxQuestions();
        }

    }

    private void checkMaxQuestions() {
        questionsAsked++;

        if (questionsAsked > 5) {

            setDialogue(phase1Scenes.get(sceneIndex).getCharacter() + " walked away out off boredom");

            sceneIndex++;

            irritation = 0;

            display1.setCharacter(phase1Scenes.get(sceneIndex).getCharacter());

            display1.repaint();

            updateQuestions();

            questionsAsked = 0;

            if (phase == 1) {
                setDialogue(txtDialogue.getText() + "\n" + "You went to go talk to " + phase1Scenes.get(sceneIndex).getCharacter() + " instead.");
            } else {
                setDialogue(txtDialogue.getText() + "\n" + "You went to go talk to " + phase2Scenes.get(sceneIndex).getCharacter() + " instead.");
            }
        }
    }

    private void updateQuestions() {
        if (phase == 1) {
            btnQuestion1.setText(phase1Scenes.get(sceneIndex).getDescription().get(0));
            btnQuestion2.setText(phase1Scenes.get(sceneIndex).getDescription().get(1));
            btnQuestion3.setText(phase1Scenes.get(sceneIndex).getDescription().get(2));

            type = 0;
        } else {
            btnQuestion1.setText(phase2Scenes.get(sceneIndex).getDescription().get(0));
            btnQuestion2.setText(phase2Scenes.get(sceneIndex).getDescription().get(1));
            btnQuestion3.setText(phase2Scenes.get(sceneIndex).getDescription().get(2));
        }
    }

    private void transitionPhase2() {
        sceneIndex = 0;

        questionsAsked = 0;

        phase++;

        display1.setCharacter(phase2Scenes.get(sceneIndex).getCharacter());

        display1.repaint();

        btnCasual.setEnabled(false);
        btnUnrelated.setEnabled(false);
        btnInvasive.setEnabled(false);

        updateQuestions();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Menu windowFrame = new Menu();
                windowFrame.setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCall;
    private javax.swing.JButton btnCasual;
    private javax.swing.JButton btnContinue;
    private javax.swing.JButton btnInvasive;
    private javax.swing.JButton btnQuestion1;
    private javax.swing.JButton btnQuestion2;
    private javax.swing.JButton btnQuestion3;
    private javax.swing.JButton btnUnrelated;
    private javax.swing.ButtonGroup btngpQuestion;
    private zehrsgame.Display display1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextArea txtDialogue;
    // End of variables declaration//GEN-END:variables
}
